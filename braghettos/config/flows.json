[{"id":"a0d9be92.26a87","type":"tab","label":"Flow 1","disabled":false,"info":""},{"id":"2890336b.d9823c","type":"tab","label":"Flow 2"},{"id":"4283f0c3.3b44b","type":"xbee-config","z":"","apiMode":"2","rawFrames":false,"convertAdc":true,"vrefAdc":"1200","serialPort":"/dev/serial0","lock":true,"baudRate":"9600","dataBits":"8","stopBits":"1","parity":"none","bufferSize":"65536","rtscts":false,"xon":false,"xoff":false,"xany":false,"vmin":"1","vtime":"0"},{"id":"80710f61.106e1","type":"wiotp-credentials","z":"","name":"","org":"8eg0a9","serverName":"","devType":"aquaponics","devId":"aquaponics","keepalive":"300","cleansession":true,"tls":"","usetls":false},{"id":"d76500bf.0f4cc","type":"telegram bot","z":"","botname":"makeanaquaponicsbot","usernames":"350858271","chatids":"350858271"},{"id":"f6b426c.d9f85d8","type":"function","z":"a0d9be92.26a87","name":"XBee Transmit Request","func":"var newMsg = { payload: \n    {\n        type: 0x10, // xbee_api.constants.FRAME_TYPE.ZIGBEE_TRANSMIT_REQUEST \n        id: 0x01, // optional, nextFrameId() is called per default \n        destination64: \"0013A200408BB14C\",\n        destination16: \"fffe\", // optional, \"fffe\" is default \n        broadcastRadius: 0x00, // optional, 0x00 is default \n        options: 0x00, // optional, 0x00 is default \n        data: msg.payload.command // Can either be string or byte array. \n    }    \n};\n\n\nif(msg.payload.command.toString().toUpperCase() == \"SCANFISHBED\"){\n    global.set(\"scanningFishBed\",\"true\");  // this is now available to other nodes\n} else if(msg.payload.command.toString().toUpperCase() == \"STOPSCANFISHBED\"){\n    global.set(\"scanningFishBed\",\"false\");  // this is now available to other nodes\n}\n\nreturn newMsg;","outputs":1,"noerr":0,"x":330.1348876953125,"y":1483.491943359375,"wires":[["e938f392.5c262","97e5c82a.9fb298"]]},{"id":"97e5c82a.9fb298","type":"debug","z":"a0d9be92.26a87","name":"output raw frame from web command","active":true,"console":"false","complete":"true","x":698.9682006835938,"y":1482.9364013671875,"wires":[]},{"id":"b7b3e9b8.c03ba8","type":"xbee-rx","z":"a0d9be92.26a87","name":"","xBee":"4283f0c3.3b44b","x":142.22222137451172,"y":126.66666603088379,"wires":[["ece07986.e2ea98","2a9bfe36.73f9b2"]]},{"id":"e938f392.5c262","type":"xbee-tx","z":"a0d9be92.26a87","name":"","xBee":"4283f0c3.3b44b","x":493.96820068359375,"y":1562.269775390625,"wires":[]},{"id":"ece07986.e2ea98","type":"function","z":"a0d9be92.26a87","name":"XBee Received data","func":"var firstChar;\nvar lastChar;\nvar newMsg;\nvar payloadAppend = context.get('payloadAppend')||'';\n\n//node.warn('first char=' + firstChar);\n\nif (msg.payload.type === 144) {\n   \n   firstChar = msg.payload.data.toString().substr(0, 1);\n   lastChar = msg.payload.data.toString().substr(msg.payload.data.length-1, msg.payload.data.length);\n   \n   if(firstChar == \"{\" ){\n       payloadAppend += msg.payload.data.toString();\n       context.set('payloadAppend',payloadAppend);\n   } else if(lastChar == \"}\" ){\n       var now = ( new Date() ).getTime();\n       payloadAppend += ',' + msg.payload.data.toString();\n       newMsg = { payload: payloadAppend, \"timestamp\": now };\n       context.set('payloadAppend','');\n   } else {\n       payloadAppend += ',' + msg.payload.data.toString();\n       context.set('payloadAppend',payloadAppend);\n   }\n   \n   node.warn(\"msg.payload.data=\" + msg.payload.data.toString() + \", firstChar=\" + firstChar + \", lastChar=\" + lastChar + \", payloadAppend POST =\" + payloadAppend);\n   \n}\n\nreturn newMsg;","outputs":1,"noerr":0,"x":341.49998474121094,"y":198.77778244018555,"wires":[["bf936509.ccb888","a163452c.fd4c08"]]},{"id":"2a9bfe36.73f9b2","type":"debug","z":"a0d9be92.26a87","name":"input raw frame","active":true,"console":"false","complete":"true","x":665.3888854980469,"y":128.66666793823242,"wires":[]},{"id":"bf936509.ccb888","type":"debug","z":"a0d9be92.26a87","name":"New payload","active":true,"console":"false","complete":"payload","x":656.1111068725586,"y":200.66666221618652,"wires":[]},{"id":"f1027e46.4acd2","type":"json","z":"a0d9be92.26a87","name":"","pretty":true,"x":396.9444580078125,"y":362.1111145019531,"wires":[["c7ef311b.2c5e3","de1be5cd.a29a18"]]},{"id":"c7ef311b.2c5e3","type":"debug","z":"a0d9be92.26a87","name":"json validator","active":true,"console":"false","complete":"true","x":654.8333129882812,"y":361.6666564941406,"wires":[]},{"id":"d14f4750.ce5f88","type":"wiotp out","z":"a0d9be92.26a87","authType":"d","qs":"false","qsDeviceId":"","deviceKey":"80710f61.106e1","deviceType":"raspberrypi","deviceId":"raspberrypi3","event":"aquaponicsensor","format":"json","qos":"0","name":"","x":668.8333625793457,"y":524.333330154419,"wires":[]},{"id":"a163452c.fd4c08","type":"switch","z":"a0d9be92.26a87","name":"if payload is final json message","property":"payload","propertyType":"msg","rules":[{"t":"cont","v":"}","vt":"str"}],"checkall":"true","outputs":1,"x":324,"y":276.22222900390625,"wires":[["f1027e46.4acd2"]]},{"id":"8d40d186.aef9c","type":"function","z":"a0d9be92.26a87","name":"XBee Transmit Request","func":"context.set('payloadAppend','');\n\nvar msg = { payload: \n    {\n        type: 0x10, // xbee_api.constants.FRAME_TYPE.ZIGBEE_TRANSMIT_REQUEST \n        id: 0x01, // optional, nextFrameId() is called per default \n        destination64: \"0013A200408BB14C\",\n        destination16: \"fffe\", // optional, \"fffe\" is default \n        broadcastRadius: 0x00, // optional, 0x00 is default \n        options: 0x00, // optional, 0x00 is default \n        data: \"sensorStatus\" // Can either be string or byte array. \n    }    \n};\n\nnode.warn(\"scanningFishBed=\" + global.get(\"scanningFishBed\"));\n\nreturn msg;","outputs":1,"noerr":0,"x":204.66268920898438,"y":1065.797607421875,"wires":[["ba4f29bc.53dbd8","6e56045e.22f2dc"]]},{"id":"ebba87d5.7905d8","type":"inject","z":"a0d9be92.26a87","name":"Hardware Status","topic":"","payload":"","payloadType":"date","repeat":"300","crontab":"","once":true,"x":145.80157470703125,"y":997.547607421875,"wires":[["8d40d186.aef9c"]]},{"id":"ba4f29bc.53dbd8","type":"debug","z":"a0d9be92.26a87","name":"output raw frame","active":true,"console":"false","complete":"true","x":648.4959716796875,"y":1065.2420654296875,"wires":[]},{"id":"bafb4e1c.73fff","type":"xbee-tx","z":"a0d9be92.26a87","name":"","xBee":"4283f0c3.3b44b","x":487.4959716796875,"y":1264.5753173828125,"wires":[]},{"id":"bfa0a93.694e758","type":"http in","z":"a0d9be92.26a87","name":"","url":"/command","method":"post","upload":true,"swaggerDoc":"","x":147.85713958740234,"y":1409.8253736495972,"wires":[["9061b49f.714798","f6b426c.d9f85d8"]]},{"id":"9061b49f.714798","type":"debug","z":"a0d9be92.26a87","name":"Command from web","active":true,"console":"false","complete":"true","x":412.9126892089844,"y":1409.714280128479,"wires":[]},{"id":"c14cf83f.e49b28","type":"comment","z":"a0d9be92.26a87","name":"Check Hardware Status every 5 minutes","info":"","x":433.6349182128906,"y":921.047607421875,"wires":[]},{"id":"d520ed84.bdead","type":"comment","z":"a0d9be92.26a87","name":"Execute command from Watson IoT Platform","info":"","x":432.30157470703125,"y":1352.3809595108032,"wires":[]},{"id":"143ed4d9.94123b","type":"comment","z":"a0d9be92.26a87","name":"Read XBee packet and send it to Watson IoT Platform","info":"","x":413.88890075683594,"y":52.22222328186035,"wires":[]},{"id":"63fc213a.a1574","type":"debug","z":"a0d9be92.26a87","name":"telegram input","active":true,"console":"false","complete":"true","x":607.2221755981445,"y":1757.7777395248413,"wires":[]},{"id":"bcca1060.c8e7d","type":"comment","z":"a0d9be92.26a87","name":"Execute command from Telegram Bot","info":"","x":420.5555725097656,"y":1677.7778301239014,"wires":[]},{"id":"626c2dfc.9ccea4","type":"function","z":"a0d9be92.26a87","name":"XBee Transmit Request","func":"var newMsg = { payload: \n    {\n        type: 0x10, // xbee_api.constants.FRAME_TYPE.ZIGBEE_TRANSMIT_REQUEST \n        id: 0x01, // optional, nextFrameId() is called per default \n        destination64: \"0013A200408BB14C\",\n        destination16: \"fffe\", // optional, \"fffe\" is default \n        broadcastRadius: 0x00, // optional, 0x00 is default \n        options: 0x00, // optional, 0x00 is default \n        data: msg.payload.content.toString().substr(1, msg.payload.content.length) // Can either be string or byte array. \n    }    \n};\n\n\nreturn newMsg;","outputs":1,"noerr":0,"x":502.5,"y":1925,"wires":[["1f2973d7.5b851c","7f971542.9270ec"]]},{"id":"1f2973d7.5b851c","type":"xbee-tx","z":"a0d9be92.26a87","name":"","xBee":"4283f0c3.3b44b","x":725,"y":1864,"wires":[]},{"id":"4082a511.bed84c","type":"switch","z":"a0d9be92.26a87","name":"","property":"payload.content","propertyType":"msg","rules":[{"t":"cont","v":"/sensorstatus","vt":"str"},{"t":"cont","v":"/switchonpump","vt":"str"},{"t":"cont","v":"/switchoffpump","vt":"str"}],"checkall":"true","outputs":3,"x":317.5,"y":1837,"wires":[["626c2dfc.9ccea4"],["626c2dfc.9ccea4"],["626c2dfc.9ccea4"]]},{"id":"262e8560.1b144a","type":"telegram receiver","z":"a0d9be92.26a87","name":"makeanaquaponicsbot","bot":"d76500bf.0f4cc","saveDataDir":"","x":140.5,"y":1757,"wires":[["63fc213a.a1574","4082a511.bed84c"],["63fc213a.a1574"]]},{"id":"7f971542.9270ec","type":"debug","z":"a0d9be92.26a87","name":"telegram output raw frame","active":true,"console":"false","complete":"true","x":703.5,"y":2016,"wires":[]},{"id":"83fa0786.f013d8","type":"inject","z":"2890336b.d9823c","name":"","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"x":130.5,"y":152,"wires":[["22517046.6bc17"]]},{"id":"2d9c103e.c17ec","type":"debug","z":"2890336b.d9823c","name":"","active":true,"console":"true","complete":"true","x":515.5,"y":219,"wires":[]},{"id":"22517046.6bc17","type":"python-function","z":"2890336b.d9823c","name":"python test","func":"import requests\n\n# Define cloudant username\nuser = \"b75ed432-525e-4bf7-bcc7-1146c4634da8-bluemix\"\n\n# Define cloudant password\npasswd = \"8e1da5fba2be2e5798322931d17cc29179281c99cf2d0d50860fb099b904ee86\"\n\n# Define cloudant host\nhost = user+\".cloudant.com\"\n\n# Define cloudant db name\ndb = \"iotp_8eg0a9_aquaponics_2017-08-28\"\n\n# Define view variable to contain the Map View Name\nview = \"by-deviceId\"\n\n# Frame the URL using above defned variables values\nurl = 'https://'+host+'/'+db+'/_design/iotp/_view/'+view\n\n# Define args variable to store required parameter values\nargs = { 'key'  :  ' \"aquaponics\" '  ,  'limit'  :  '5'  }\n\n# Invoke HTTP GET request with all required parameters\nresponse = requests.get(url,params=args,auth=(user,passwd))\n\n\n# Check the response status code, should be 200 to proceed further\nif ( response.status_code == 200):\n    # Get the response data in JSON format\n    jsonData = response.json()\n    # Get the device data records which are JSON array of rows with in jsonData\n    records = jsonData['rows']\n    # For each record, get deviceType, deviceID and devicedata from the records\n    for record in records:\n        dType = record['value']['deviceType']\n        dTimestamp = record['value']['timestamp']\n        dValue = record['value']['data']['d']['aquaponicSensor']['igrValue']\n        node.warn(\"igrValue=\" + str(dValue) + \", timestamp=\" + str(dTimestamp) )\n        #print \"Device Type: %s  Device Id: %s  Value: %s\" %(dType,dID,str(dValue))\nelse:\n    #print \"HTTP GET Failed with Status Code - %s\" %(response.status_code)\n    node.warn(\"HTTP GET Failed with Status Code - \" + response.status_code)\n\nreturn msg","outputs":1,"x":350.5,"y":183,"wires":[["2d9c103e.c17ec"]]},{"id":"6e56045e.22f2dc","type":"switch","z":"a0d9be92.26a87","name":"check if scanningFishBed is false","property":"scanningFishBed","propertyType":"global","rules":[{"t":"eq","v":"false","vt":"str"},{"t":"null"}],"checkall":"true","outputs":2,"x":268.5,"y":1133,"wires":[["69530dc2.a1e844"],["69530dc2.a1e844"]]},{"id":"69530dc2.a1e844","type":"function","z":"a0d9be92.26a87","name":"set checkinHardwareStatus to true","func":"global.set(\"checkinHardwareStatus\",\"true\");  // this is now available to other nodes\n\nnode.warn(\"checkinHardwareStatus=\" + global.get(\"checkinHardwareStatus\"));\n\nreturn msg;","outputs":1,"noerr":0,"x":338.5,"y":1201,"wires":[["bafb4e1c.73fff"]]},{"id":"de1be5cd.a29a18","type":"function","z":"a0d9be92.26a87","name":"set checkinHardwareStatus to false","func":"global.set(\"checkinHardwareStatus\",\"false\");  // this is now available to other nodes\n\nnode.warn(\"checkinHardwareStatus=\" + global.get(\"checkinHardwareStatus\"));\n   \nreturn msg;","outputs":1,"noerr":0,"x":308,"y":445,"wires":[["d14f4750.ce5f88"]]},{"id":"a40f3710.5ce3e8","type":"http in","z":"a0d9be92.26a87","name":"","url":"/test","method":"get","upload":false,"swaggerDoc":"","x":117.5,"y":1546,"wires":[["9061b49f.714798"]]}]
