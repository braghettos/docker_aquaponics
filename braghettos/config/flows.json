[{"id":"a0d9be92.26a87","type":"tab","label":"Check hardware","disabled":false,"info":""},{"id":"2890336b.d9823c","type":"tab","label":"Get IgrValue plot","disabled":false,"info":""},{"id":"41496098.34f5c","type":"tab","label":"Receive telegram commands","disabled":false,"info":""},{"id":"ba98f7c2.f00768","type":"tab","label":"Send XBee Command","disabled":false,"info":""},{"id":"88cfd3e9.275de","type":"tab","label":"Receive XBee packet","disabled":false,"info":""},{"id":"b8d1c3bd.68d3","type":"tab","label":"Receive web command","disabled":false,"info":""},{"id":"4283f0c3.3b44b","type":"xbee-config","z":"","apiMode":"2","rawFrames":false,"convertAdc":true,"vrefAdc":"1200","serialPort":"/dev/serial0","lock":true,"baudRate":"9600","dataBits":"8","stopBits":"1","parity":"none","bufferSize":"65536","rtscts":false,"xon":false,"xoff":false,"xany":false,"vmin":"1","vtime":"0"},{"id":"80710f61.106e1","type":"wiotp-credentials","z":"","name":"","org":"8eg0a9","serverName":"","devType":"aquaponics","devId":"aquaponics","keepalive":"300","cleansession":true,"tls":"","usetls":false},{"id":"d8525076.87936","type":"telegram bot","z":"","botname":"makeaqwertybot","usernames":"350858271","chatids":"350858271"},{"id":"cbe50cc7.c7a7e","type":"telegram bot","z":"ba98f7c2.f00768","botname":"HeinzBot"},{"id":"ae8b20b9.db139","type":"telegram bot","z":"ba98f7c2.f00768","botname":"HeinzBot","usernames":"","chatids":""},{"id":"aa2fc85e.600138","type":"telegram bot","z":"ba98f7c2.f00768","botname":"HeinzBot"},{"id":"cbcfc62f.23b3d8","type":"telegram bot","z":"ba98f7c2.f00768","botname":"FrogeyeBot"},{"id":"ebba87d5.7905d8","type":"inject","z":"a0d9be92.26a87","name":"Sensor Status","topic":"","payload":"","payloadType":"date","repeat":"300","crontab":"","once":true,"x":122.80157470703125,"y":134.547607421875,"wires":[["6e56045e.22f2dc"]]},{"id":"c14cf83f.e49b28","type":"comment","z":"a0d9be92.26a87","name":"Check Hardware Status every 5 minutes","info":"","x":420.6349182128906,"y":58.047607421875,"wires":[]},{"id":"83fa0786.f013d8","type":"inject","z":"2890336b.d9823c","name":"","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"00 23 * * *","once":false,"x":140.5,"y":152,"wires":[["22517046.6bc17"]]},{"id":"22517046.6bc17","type":"python-function","z":"2890336b.d9823c","name":"Get IgrValue plot","func":"import requests\nimport plotly.plotly as py\nimport plotly.graph_objs as go\nfrom datetime import datetime\n\n# Define cloudant username\nuser = \"b75ed432-525e-4bf7-bcc7-1146c4634da8-bluemix\"\n\n# Define cloudant password\npasswd = \"8e1da5fba2be2e5798322931d17cc29179281c99cf2d0d50860fb099b904ee86\"\n\n# Define cloudant host\nhost = user+\".cloudant.com\"\n\n\ni = datetime.now()\n\nyear = i.strftime(\"%Y\")\nmonth = i.strftime(\"%m\")\nday = i.strftime(\"%d\")\n\nnode.warn(\"Today is \" + year + \"-\" + month + \"-\" + day)\n\n# Define cloudant db name\ndb = \"iotp_8eg0a9_aquaponics_\" + str(year) + \"-\" + str(month) + \"-\" + str(day)\n\n# Define view variable to contain the Map View Name\nview = \"by-date\"\n\n# Frame the URL using above defned variables values\nurl = 'https://'+host+'/'+db+'/_design/iotp/_view/'+view\n\n# Define args variable to store required parameter values\nargs = { 'descending' : 'false' }\n\n# Invoke HTTP GET request with all required parameters\nresponse = requests.get(url,params=args,auth=(user,passwd))\n\nigrValue = [];\nigrTime = [];\n\n# Check the response status code, should be 200 to proceed further\nif ( response.status_code == 200):\n    # Get the response data in JSON format\n    jsonData = response.json()\n    # Get the device data records which are JSON array of rows with in jsonData\n    records = jsonData['rows']\n    # For each record, get deviceType, deviceID and devicedata from the records\n    for record in records:\n        dType = record['value']['deviceType']\n        dTimestamp = record['value']['timestamp']\n        \n        igrTime.append(dTimestamp);\n        \n        dValue = record['value']['data']['d']['aquaponicSensor']['igrValue']\n        \n        igrValue.append(dValue);\n        \n        node.warn(\"igrValue=\" + str(dValue) + \", timestamp=\" + str(dTimestamp) )\n        #print \"Device Type: %s  Device Id: %s  Value: %s\" %(dType,dID,str(dValue))\nelse:\n    #print \"HTTP GET Failed with Status Code - %s\" %(response.status_code)\n    node.warn(\"HTTP GET Failed with Status Code - \" + response.status_code)\n\npy.sign_in('braghettos', 'HjPGCZef6HXIro7lRf4L') # Replace the username, and API key with your credentials.\n\ntrace = go.Scatter(x=igrTime, y=igrValue)\ndata = [trace]\nlayout = go.Layout(title='IgrValue Plot', width=800, height=640)\nfig = go.Figure(data=data, layout=layout)\n\npy.image.save_as(fig, filename='/tmp/igrvalue-plot-' + year + '-' + month + '-' + day + '.png')\n\nnode.warn(\"img created!\");\n\nreturn msg","outputs":1,"x":370.5,"y":175,"wires":[["641e53d4.153a7c"]]},{"id":"6e56045e.22f2dc","type":"switch","z":"a0d9be92.26a87","name":"check if scanningFishBed is false","property":"scanningFishBed","propertyType":"global","rules":[{"t":"eq","v":"false","vt":"str"},{"t":"null"}],"checkall":"true","outputs":2,"x":273.2777786254883,"y":216.66667556762695,"wires":[["69530dc2.a1e844"],["69530dc2.a1e844"]]},{"id":"69530dc2.a1e844","type":"function","z":"a0d9be92.26a87","name":"set checkinSensorStatus to true","func":"global.set(\"checkinSensorStatus\",\"true\");  // this is now available to other nodes\n\nnode.warn(\"checkinSensorStatus=\" + global.get(\"checkinSensorStatus\") + \", scanningFishBed=\" + global.get(\"scanningFishBed\"));\n\nvar msg = { payload: \n    {\n        command: \"sensorStatus\" // Can either be string or byte array. \n    }    \n};\n\nreturn msg;","outputs":1,"noerr":0,"x":337.2777786254883,"y":314.66667556762695,"wires":[["f0569ae6.f54828"]]},{"id":"98783b06.d21508","type":"telegram command","z":"2890336b.d9823c","name":"","command":"/getigrvalueplot","bot":"d8525076.87936","x":127.5,"y":244,"wires":[["22517046.6bc17"],[]]},{"id":"641e53d4.153a7c","type":"function","z":"2890336b.d9823c","name":"Send IgrValue plot via Telegram","func":"d = new Date();\n\nlet month = String(d.getMonth() + 1);\nlet day = String(d.getDate());\nconst year = String(d.getFullYear());\n\nif (month.length < 2) month = '0' + month;\nif (day.length < 2) day = '0' + day;\n\nnode.warn(year + \"-\" + month + \"-\" + day);\n\nvar msg = { payload: \n    {\n        type: 'photo', \n        content: '/tmp/igrvalue-plot-' + year + '-' + month + '-' + day + '.png',\n        chatId: 350858271\n    }    \n};\n\n\n/* type can be one of the following\nphoto\naudio\nvideo\nsticker\nvoice\ndocument\n*/\n\nreturn msg;","outputs":1,"noerr":0,"x":472.5,"y":264,"wires":[["86678d95.b48a6"]]},{"id":"86678d95.b48a6","type":"telegram sender","z":"2890336b.d9823c","name":"","bot":"d8525076.87936","x":615.5,"y":340,"wires":[["34855c8a.a9b0c4"]]},{"id":"34855c8a.a9b0c4","type":"debug","z":"2890336b.d9823c","name":"telegram sender debug","active":true,"console":"true","complete":"true","x":621.5,"y":448,"wires":[]},{"id":"eadebd79.d9945","type":"xbee-tx","z":"ba98f7c2.f00768","name":"","xBee":"4283f0c3.3b44b","x":674.4682159423828,"y":505.75000762939453,"wires":[]},{"id":"941db690.4adf08","type":"switch","z":"ba98f7c2.f00768","name":"Check command","property":"payload.data","propertyType":"msg","rules":[{"t":"cont","v":"startscanfishbed","vt":"str"},{"t":"eq","v":"stopscanfishbed","vt":"str"},{"t":"null"},{"t":"else"}],"checkall":"true","outputs":4,"x":411.00001525878906,"y":434.48023223876953,"wires":[["3961473c.0fff48"],["b50b2de2.7125b"],["3961473c.0fff48"],["eadebd79.d9945"]]},{"id":"829d864f.b01268","type":"switch","z":"ba98f7c2.f00768","name":"Check if checkinSensorStatus is false","property":"checkinSensorStatus","propertyType":"global","rules":[{"t":"eq","v":"false","vt":"str"},{"t":"null"},{"t":"else"}],"checkall":"true","outputs":3,"x":418.00001525878906,"y":243.48023223876953,"wires":[["941db690.4adf08"],["941db690.4adf08"],["9539bcaf.9d614","73820f62.b9b69"]]},{"id":"9539bcaf.9d614","type":"delay","z":"ba98f7c2.f00768","name":"","pauseType":"delay","timeout":"5","timeoutUnits":"seconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":288.00001525878906,"y":335.48023223876953,"wires":[["829d864f.b01268"]]},{"id":"3961473c.0fff48","type":"function","z":"ba98f7c2.f00768","name":"set scanningFishBed to true","func":"global.set(\"scanningFishBed\",\"true\");  // this is now available to other nodes\n\nnode.warn(\"checkinHardwareStatus=\" + global.get(\"checkinHardwareStatus\") + \", scanningFishBed=\" + global.get(\"scanningFishBed\"));\n\nreturn msg;","outputs":1,"noerr":0,"x":393.50001525878906,"y":551.4802322387695,"wires":[["eadebd79.d9945"]]},{"id":"b50b2de2.7125b","type":"function","z":"ba98f7c2.f00768","name":"set scanningFishBed to false","func":"global.set(\"scanningFishBed\",\"false\");  // this is now available to other nodes\n\nnode.warn(\"checkinHardwareStatus=\" + global.get(\"checkinHardwareStatus\") + \", scanningFishBed=\" + global.get(\"scanningFishBed\"));\n\nreturn msg;","outputs":1,"noerr":0,"x":392.50001525878906,"y":625.4802322387695,"wires":[[]]},{"id":"cd04f0ec.e2534","type":"function","z":"41496098.34f5c","name":"confirmation message","func":"context.global.keyboard = { pending : true };\n\nvar opts = {\n  reply_to_message_id: msg.payload.messageId,\n  reply_markup: JSON.stringify({\n    keyboard: [\n      ['Yes'],\n      ['No']],\n      'resize_keyboard' : true, \n      'one_time_keyboard' : true\n  })\n};\n\nmsg.payload.content = 'Really?';\nmsg.payload.options = opts;\n\nflow.set(\"command\",msg.originalMessage.text.toString().substring(1))\n\nnode.warn(\"command=\" + flow.get(\"command\"));\n\nreturn [ msg ];\n","outputs":"1","noerr":0,"x":536.8333435058594,"y":330.33334159851074,"wires":[["6a3d3c7e.824584"]]},{"id":"276a7cfc.9b6004","type":"telegram command","z":"41496098.34f5c","name":"/gohome","command":"/gohome","bot":"d8525076.87936","x":186.49999237060547,"y":160,"wires":[["cd04f0ec.e2534"],["50a509f0.c0dbf8"]]},{"id":"50a509f0.c0dbf8","type":"function","z":"41496098.34f5c","name":"create response","func":"if(context.global.keyboard.pending)\n{\n    context.global.keyboard.pending = false;\n    \n    if(msg.payload.content === 'Yes')\n    {\n        msg.payload.content = 'Yes';\n        msg.payload.command = flow.get(\"command\");\n        return [msg, null];   \n    }\n    else\n    {\n        msg.payload.content = 'No';\n        return [null, msg];   \n    }\n}\n","outputs":"2","noerr":0,"x":520.8333435058594,"y":389.33334159851074,"wires":[["3a35662f.2cba4a"],[]]},{"id":"6a3d3c7e.824584","type":"telegram sender","z":"41496098.34f5c","name":"send response","bot":"d8525076.87936","x":761.944465637207,"y":530.0000267028809,"wires":[[]]},{"id":"e3f72e72.213a9","type":"link in","z":"ba98f7c2.f00768","name":"Send XBee Command","links":["3a35662f.2cba4a","f6c6c60f.3e7c38","f0569ae6.f54828"],"x":97.50002098083496,"y":59.750006675720215,"wires":[["fb4eea94.6a3b28"]]},{"id":"3a35662f.2cba4a","type":"link out","z":"41496098.34f5c","name":"","links":["e3f72e72.213a9"],"x":449.0556182861328,"y":527.1111392974854,"wires":[]},{"id":"fb4eea94.6a3b28","type":"function","z":"ba98f7c2.f00768","name":"XBee Transmit Request","func":"var newMsg = { payload: \n    {\n        type: 0x10, // xbee_api.constants.FRAME_TYPE.ZIGBEE_TRANSMIT_REQUEST \n        id: 0x01, // optional, nextFrameId() is called per default \n        destination64: \"0013A200408BB14C\",\n        destination16: \"fffe\", // optional, \"fffe\" is default \n        broadcastRadius: 0x00, // optional, 0x00 is default \n        options: 0x00, // optional, 0x00 is default \n        data: msg.payload.command // Can either be string or byte array. \n    }    \n};\n\nreturn newMsg;","outputs":1,"noerr":0,"x":275,"y":149,"wires":[["829d864f.b01268","6c88bf9b.e688b"]]},{"id":"73820f62.b9b69","type":"debug","z":"ba98f7c2.f00768","name":"waiting...","active":true,"console":"false","complete":"payload","x":655.5,"y":353,"wires":[]},{"id":"6c88bf9b.e688b","type":"debug","z":"ba98f7c2.f00768","name":"XBee packet to send","active":true,"console":"false","complete":"payload","x":596.5,"y":149,"wires":[]},{"id":"f3ba93c7.ed41c","type":"xbee-rx","z":"88cfd3e9.275de","name":"","xBee":"4283f0c3.3b44b","x":115,"y":135,"wires":[["86f002b.b093c","e2286855.be1678"]]},{"id":"86f002b.b093c","type":"function","z":"88cfd3e9.275de","name":"XBee Received data","func":"var firstChar;\nvar lastChar;\nvar newMsg;\nvar payloadAppend = context.get('payloadAppend')||'';\n\n//node.warn('first char=' + firstChar);\n\nif (msg.payload.type === 144) {\n   \n   firstChar = msg.payload.data.toString().substr(0, 1);\n   lastChar = msg.payload.data.toString().substr(msg.payload.data.length-1, msg.payload.data.length);\n   \n   if(firstChar == \"{\" ){\n       payloadAppend += msg.payload.data.toString();\n       context.set('payloadAppend',payloadAppend);\n   } else if(lastChar == \"}\" ){\n       var now = ( new Date() ).getTime();\n       payloadAppend += ',' + msg.payload.data.toString();\n       newMsg = { payload: payloadAppend, \"timestamp\": now };\n       context.set('payloadAppend','');\n   } else {\n       payloadAppend += ',' + msg.payload.data.toString();\n       context.set('payloadAppend',payloadAppend);\n   }\n   \n   node.warn(\"msg.payload.data=\" + msg.payload.data.toString() + \", firstChar=\" + firstChar + \", lastChar=\" + lastChar + \", payloadAppend POST =\" + payloadAppend);\n   \n}\n\nreturn newMsg;","outputs":1,"noerr":0,"x":314.2777633666992,"y":207.11111640930176,"wires":[["ea45fc5d.55346","eecd86a7.5518d8"]]},{"id":"e2286855.be1678","type":"debug","z":"88cfd3e9.275de","name":"input raw frame","active":true,"console":"false","complete":"true","x":638.1666641235352,"y":137.00000190734863,"wires":[]},{"id":"ea45fc5d.55346","type":"debug","z":"88cfd3e9.275de","name":"New payload","active":true,"console":"false","complete":"payload","x":628.8888854980469,"y":208.99999618530273,"wires":[]},{"id":"9e2b0d24.c2091","type":"json","z":"88cfd3e9.275de","name":"","pretty":true,"x":369.7222366333008,"y":370.44444847106934,"wires":[["3a5b7e4d.0be312","65ce4a88.9b9634"]]},{"id":"3a5b7e4d.0be312","type":"debug","z":"88cfd3e9.275de","name":"json validator","active":true,"console":"false","complete":"true","x":627.6110916137695,"y":369.99999046325684,"wires":[]},{"id":"754b6d2d.768274","type":"wiotp out","z":"88cfd3e9.275de","authType":"d","qs":"false","qsDeviceId":"","deviceKey":"80710f61.106e1","deviceType":"raspberrypi","deviceId":"raspberrypi3","event":"aquaponicsensor","format":"json","qos":"0","name":"","x":641.611141204834,"y":532.6666641235352,"wires":[]},{"id":"eecd86a7.5518d8","type":"switch","z":"88cfd3e9.275de","name":"if payload is final json message","property":"payload","propertyType":"msg","rules":[{"t":"cont","v":"}","vt":"str"}],"checkall":"true","outputs":1,"x":296.7777786254883,"y":284.55556297302246,"wires":[["9e2b0d24.c2091"]]},{"id":"9503ac48.abc4","type":"comment","z":"88cfd3e9.275de","name":"Read XBee packet and send it to Watson IoT Platform","info":"","x":386.6666793823242,"y":60.55555725097656,"wires":[]},{"id":"65ce4a88.9b9634","type":"function","z":"88cfd3e9.275de","name":"set checkinSensorStatus to false","func":"global.set(\"checkinSensorStatus\",\"false\");  // this is now available to other nodes\n\nnode.warn(\"checkinSensorStatus=\" + global.get(\"checkinSensorStatus\") + \", scanningFishBed=\" + global.get(\"scanningFishBed\"));\n\nreturn msg;","outputs":1,"noerr":0,"x":280.7777786254883,"y":453.3333339691162,"wires":[["754b6d2d.768274"]]},{"id":"80a31bf1.921148","type":"http in","z":"b8d1c3bd.68d3","name":"","url":"/command","method":"post","upload":true,"swaggerDoc":"","x":134.38890838623047,"y":111.88884925842285,"wires":[["1f71b197.84aa9e","f6c6c60f.3e7c38"]]},{"id":"1f71b197.84aa9e","type":"debug","z":"b8d1c3bd.68d3","name":"Command from web","active":true,"console":"false","complete":"true","x":399.4444580078125,"y":111.77775573730469,"wires":[]},{"id":"7769d5ca.0bddcc","type":"comment","z":"b8d1c3bd.68d3","name":"Execute command from Watson IoT Platform","info":"","x":418.8333435058594,"y":54.444435119628906,"wires":[]},{"id":"f6c6c60f.3e7c38","type":"link out","z":"b8d1c3bd.68d3","name":"","links":["e3f72e72.213a9"],"x":313.8888645172119,"y":200.00001525878906,"wires":[]},{"id":"40a9ca7b.c1b9c4","type":"telegram command","z":"41496098.34f5c","name":"/switchstatus","command":"/switchstatus","bot":"d8525076.87936","x":178.33334350585938,"y":236.6666965484619,"wires":[["cd04f0ec.e2534"],["50a509f0.c0dbf8"]]},{"id":"c87e1c76.5cbea","type":"telegram command","z":"41496098.34f5c","name":"/sensorstatus","command":"/sensorstatus","bot":"d8525076.87936","x":181.3333282470703,"y":314.6666564941406,"wires":[["cd04f0ec.e2534"],["50a509f0.c0dbf8"]]},{"id":"bf8bcbdb.9ead98","type":"telegram command","z":"41496098.34f5c","name":"/switchonpump","command":"/switchonpump","bot":"d8525076.87936","x":173.3333282470703,"y":388.8888854980469,"wires":[["cd04f0ec.e2534"],["50a509f0.c0dbf8"]]},{"id":"951d5e17.931bf","type":"telegram command","z":"41496098.34f5c","name":"/switchoffpump","command":"/switchoffpump","bot":"d8525076.87936","x":172.3333282470703,"y":467.77777099609375,"wires":[["cd04f0ec.e2534"],["50a509f0.c0dbf8"]]},{"id":"5b184ec1.aa059","type":"telegram command","z":"41496098.34f5c","name":"/getigrvaluethreshold","command":"/getigrvaluethreshold","bot":"d8525076.87936","x":153.3333282470703,"y":547.7777709960938,"wires":[["cd04f0ec.e2534"],["50a509f0.c0dbf8"]]},{"id":"2b42b5aa.35e7ea","type":"telegram command","z":"41496098.34f5c","name":"/startscanfishbed","command":"/startscanfishbed","bot":"d8525076.87936","x":174.4445037841797,"y":706.6666703224182,"wires":[["662a5f3d.3fa78"],["4eaf3343.df375c"]]},{"id":"662a5f3d.3fa78","type":"function","z":"41496098.34f5c","name":"confirmation message","func":"msg.payload.content = 'Which IgrValue Max Threshold?';\n\nflow.set(\"command\",msg.originalMessage.text.toString().substring(1))\n\nnode.warn(\"command=\" + flow.get(\"command\"));\n\nreturn [ msg ];\n","outputs":"1","noerr":0,"x":494.4445037841797,"y":702.2222299575806,"wires":[["6a3d3c7e.824584"]]},{"id":"4eaf3343.df375c","type":"function","z":"41496098.34f5c","name":"create response","func":"if(context.global.keyboard.pending)\n{\n    context.global.keyboard.pending = false;\n    \n}\n\nmsg.payload.command = flow.get(\"command\") + \"=\" + msg.payload.content;\n\nreturn msg;   ","outputs":"1","noerr":0,"x":478.4444885253906,"y":763.444441318512,"wires":[["3a35662f.2cba4a"]]},{"id":"963ed469.8d48e8","type":"telegram command","z":"41496098.34f5c","name":"/stopscanfishbed","command":"/stopscanfishbed","bot":"d8525076.87936","x":173.11109924316406,"y":631.1110954284668,"wires":[["cd04f0ec.e2534"],["50a509f0.c0dbf8"]]},{"id":"f0569ae6.f54828","type":"link out","z":"a0d9be92.26a87","name":"","links":["e3f72e72.213a9"],"x":617.8889122009277,"y":314.6666793823242,"wires":[]}]
